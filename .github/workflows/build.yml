name: 🔨 Build
on: [pull_request, push]

jobs:
  define-matrix:
    name: 🧩 Define matrix
    runs-on: ubuntu-latest

    outputs:
      versions: ${{ steps.versions.outputs.versions }}

    steps:
      - name: 🧩 Define versions
        id: versions
        # TODO: Analyse subprojects gradle.properties for version and java version
        run: |
          echo 'versions=[{ name:"1.19.4", java: 17 }, { name:"1.20.1", java: 17 }, { name:"1.20.2", java: 17 }, { name:"1.20.4", java: 17 }]' >> "$GITHUB_OUTPUT"

  buildtools:
    name: 🔨 BuildTools
    runs-on: ubuntu-latest
    permissions: write-all
    needs: define-matrix

    strategy:
      fail-fast: true
      matrix:
        versions: ${{ fromJSON(needs.define-matrix.outputs.versions) }}

    env:
      VERSION_NAME: ${{ matrix.versions.name }}
      JAVA_VERSION: ${{ matrix.versions.java }}

    steps:
      - name: 🛠️ Setup jdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          java-package: jdk

      - name: 🏠 Home in env
        run:
          echo "HOME=$HOME" >> $GITHUB_ENV

      - name: 🚀 Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ env.VERSION_NAME }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.VERSION_NAME }}-maven-

      - name: 💪 Run BuildTools
        uses: SpraxDev/Action-SpigotMC@v5
        with:
          versions: ${{ env.VERSION_NAME }}
          disableJavaCheck: true
          remapped: true
          forceRun: false
          threads: -1
          buildToolProvider: SpigotMC

      - name: 📦 Upload maven repo
        uses: actions/upload-artifact@v4
        with:
          name: maven-repo-${{ env.VERSION_NAME }}
          path: ${{ env.HOME }}/.m2
          include-hidden-files: 'true'
          if-no-files-found: 'error'

  build:
    name: 🔨 Build project
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - define-matrix
      - buildtools

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏠 Home in env
        run:
          echo "HOME=$HOME" >> $GITHUB_ENV

      - name: 📥 Download maven repos
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.HOME }}

      - name: 📂 Move contents to .m2
        run: |
          for dir in ${{ env.HOME }}/maven-repo-*; do
            if [ -d "$dir" ]; then
              cp -rT "$dir" "${{ env.HOME }}/.m2"
            fi
          done

      - name: 🛠️ Setup jdk 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
          java-package: jdk
          cache: gradle

      - name: 🪄 Cache gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle0-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle0-

      - name: ✅ Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: 🆙 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔨 Build project
        run: ./gradlew build

  delete-artifacts:
      name: 🗑️ Delete Artifacts
      runs-on: ubuntu-latest
      needs: build
      if: ${{ always() && !cancelled() }}
      steps:
        - name: 🗑️ Delete artifacts (✨ DMCA ✨)
          uses: geekyeggo/delete-artifact@v5
          with:
            name: maven-repo-*